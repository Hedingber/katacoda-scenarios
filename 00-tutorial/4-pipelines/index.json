{
  "title": "Getting Started with MLRun (Tutorial)",
  "description": "Develop ML pipelines locally on standard Python IDE, easily move to production at scale with K8s or Iguazio's managed MLRun service",
  "difficulty": "Intermediate",
  "time": "15",
  "details": {
    "assets": {
        "client": [
            {"file": "project.yaml", "target": "/root/editor/"},
            {"file": "local.env", "target": "/root/editor/"},
            {"file": "remote.env", "target": "/root/editor/"},
            {"file": "trainer.py", "target": "/root/editor/"},
            {"file": "gen_iris.py", "target": "/root/editor/"},
            {"file": "examples.py", "target": "/root/editor/"}
        ]
    },
    "steps": [
      {
        "title": "MLRun Projects and Functions",
        "text": "project.md"
      },
      {
        "title": "Install & Configure MLRun (Locally)",
        "text": "install.md"
      },
      {
        "title": "Run & Track Functions",
        "text": "run1.md"
      },
      {
        "title": "Inject Params and View Outputs",
        "text": "run2.md"
      },
      {
        "title": "Use Data, Train with Auto-Logging",
        "text": "run3.md"
      },
      {
        "title": "Using MLRun SDK",
        "text": "sdk.md"
      },
      {
        "title": "Hyper-params and Iterative Tasks",
        "text": "hyper.md"
      },
      {
        "title": "ML Workflow Automation",
        "text": "workflow.md"
      },
      {
        "title": "Using Remote Clusters",
        "text": "remote.md"
      },
      {
        "title": "Running Pipelines over Remote Clusters",
        "text": "remote-pipe.md"
      }
    ],
    "intro": {
      "title": "Introduction",
      "text": "intro.md",
      "courseData": "background.sh",
      "code": "foreground.sh"
    },
    "finish": {
      "title": "Additional Reading and Links",
      "text": "finish.md"
    }
  },
  "environment": {
    "uilayout": "editor-terminal",
    "uieditorpath": "/root/editor",
    "exclusionPatterns": ["__pycache__", "/root/editor/__pycache__", "__pycache__/", "__pycache__/*"],
    "showdashboard": true,
    "dashboards": [{"name": "MLRun UI", "port": 80}]
  },
  "backend": {
    "imageid": "ubuntu:2004"
  }
}